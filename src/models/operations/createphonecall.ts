/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import * as components from "../components";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Phone number associated with the call.
 */
export class PhoneNumber extends SpeakeasyBase {
  /**
   * Phone number you purchased in E.164 format. It would have an agent id associated with it.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "from" })
  from: any;

  /**
   * Callee phone number in E.164 format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "to" })
  to: string;
}

export class CreatePhoneCallRequestBody extends SpeakeasyBase {
  /**
   * Supply values to your agent prompt parameters. If the given key value cannot match any param in prompt, it would have have any effect. Learn more about [Agent Prompt Parameters](/features/agent-prompt-parameter).
   */
  @SpeakeasyMetadata({ elemType: components.AgentPromptParams })
  @Expose({ name: "agent_prompt_params" })
  @Type(() => components.AgentPromptParams)
  agentPromptParams?: components.AgentPromptParams[];

  @SpeakeasyMetadata()
  @Expose({ name: "phone_number" })
  @Type(() => PhoneNumber)
  phoneNumber: PhoneNumber;
}

/**
 * Status of call.
 */
export enum CallStatus {
  Ongoing = "ongoing",
  Ended = "ended",
  Error = "error",
}

/**
 * Web call or phone call.
 */
export enum CreatePhoneCallCallType {
  InboundPhoneCall = "inbound_phone_call",
  OutboundPhoneCall = "outbound_phone_call",
  WebCall = "web_call",
}

/**
 * Successfully retrieved an agent.
 */
export class CreatePhoneCallResponseBody extends SpeakeasyBase {
  /**
   * Corresponding agent id of this call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "agent_id" })
  agentId: string;

  /**
   * Supply values to your agent prompt parameters. If the given key value cannot match any param in prompt, it would have have any effect. Learn more about [Agent Prompt Parameters](/features/agent-prompt-parameter).
   */
  @SpeakeasyMetadata({ elemType: components.AgentPromptParams })
  @Expose({ name: "agent_prompt_params" })
  @Type(() => components.AgentPromptParams)
  agentPromptParams?: components.AgentPromptParams[];

  /**
   * Unique id of the call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "call_id" })
  callId: string;

  /**
   * Status of call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "call_status" })
  callStatus: CallStatus;

  /**
   * Web call or phone call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "call_type" })
  callType: CreatePhoneCallCallType;

  @SpeakeasyMetadata()
  @Expose({ name: "phone_number" })
  @Type(() => components.CallPhoneNumber)
  phoneNumber: components.CallPhoneNumber;

  /**
   * Begin timestamp (milliseconds since epoch) of the call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "start_timestamp" })
  startTimestamp: number;
}

export class CreatePhoneCallResponse extends SpeakeasyBase {
  /**
   * HTTP response content type for this operation
   */
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * HTTP response status code for this operation
   */
  @SpeakeasyMetadata()
  statusCode: number;

  /**
   * Raw HTTP response; suitable for custom response parsing
   */
  @SpeakeasyMetadata()
  rawResponse: AxiosResponse;

  /**
   * Successfully retrieved an agent.
   */
  @SpeakeasyMetadata()
  object?: CreatePhoneCallResponseBody;
}
