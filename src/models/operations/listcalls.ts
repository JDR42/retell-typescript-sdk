/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import * as components from "../components";
import { AxiosResponse } from "axios";

export enum CallType {
  InboundPhoneCall = "inbound_phone_call",
  OutboundPhoneCall = "outbound_phone_call",
  WebCall = "web_call",
}

export class FilterCriteria extends SpeakeasyBase {
  /**
   * Inclusive. Filter calls that end on or after this timestamp.
   */
  @SpeakeasyMetadata({ data: "queryParam, name=after_end_timestamp" })
  afterEndTimestamp?: number;

  /**
   * Inclusive. Filter calls that start on or after this timestamp.
   */
  @SpeakeasyMetadata({ data: "queryParam, name=after_start_timestamp" })
  afterStartTimestamp?: number;

  /**
   * Only retrieve calls that are made with specific agent(s).
   */
  @SpeakeasyMetadata({ data: "queryParam, name=agent_id" })
  agentId?: string[];

  /**
   * Exclusive. Filter calls that end before this timestamp.
   */
  @SpeakeasyMetadata({ data: "queryParam, name=before_end_timestamp" })
  beforeEndTimestamp?: number;

  /**
   * Exclusive. Filter calls that start before this timestamp.
   */
  @SpeakeasyMetadata({ data: "queryParam, name=before_start_timestamp" })
  beforeStartTimestamp?: number;

  /**
   * Only retrieve calls of specific type(s).
   */
  @SpeakeasyMetadata({ data: "queryParam, name=call_type" })
  callType?: CallType[];
}

/**
 * The calls will be sorted by `start_timestamp`, whether to return the calls in ascending or descending order.
 */
export enum SortOrder {
  Ascending = "ascending",
  Descending = "descending",
}

export class ListCallsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter_criteria",
  })
  filterCriteria?: FilterCriteria;

  /**
   * Limit the number of calls returned.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * The calls will be sorted by `start_timestamp`, whether to return the calls in ascending or descending order.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=sort_order",
  })
  sortOrder?: SortOrder;
}

export class ListCallsResponse extends SpeakeasyBase {
  /**
   * HTTP response content type for this operation
   */
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * HTTP response status code for this operation
   */
  @SpeakeasyMetadata()
  statusCode: number;

  /**
   * Raw HTTP response; suitable for custom response parsing
   */
  @SpeakeasyMetadata()
  rawResponse: AxiosResponse;

  /**
   * Successfully retrieved all agents.
   */
  @SpeakeasyMetadata({ elemType: components.CallDetail })
  classes?: components.CallDetail[];
}
